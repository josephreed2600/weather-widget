ul.plain, ol.plain {
	margin: 0;
	padding: 0;
	list-style: none;
}

a.plain {
	color: inherit;
	text-decoration: none;
}

.hidden {
	display: none;
}

.reset-font-size {
	font-size: 1rem;
}

/*************/

html, body {
	margin: 0;
	padding: 0;
}

html {
	width: 100vw;
	height: 100vh;
}

body {
	width: 100%;
	height: 100%;
	font-family: 'Arial', sans-serif;
	background-size: cover;
	background-position: center;
	color: #202020;
}

main {
	width: 100%;
	height: 100%;
	padding: 0.25em;
	display: flex;
	flex-direction: column;
	box-sizing: border-box;
}

main > * {
	display: block;
	box-sizing: border-box;
}

#search-container {
	width: 100%;
	border: 0.15em solid;
	border-image: linear-gradient(to right, #999999aa, transparent) 1;
	background: none;
	display: flex;
	flex-direction: row;
}

#search {
	flex: 1;
	height: 100%;
	padding: 0.5em;
	box-sizing: border-box;
	background: none;
	border: none;
}
#search::placeholder {
	color: #888888cc;
}

#search:focus {
	outline-width: 0;
}
#search, #search-status {
	font-size: 0.85em;
}
#search-status {
	max-width: fit-content;
	display: inline-block;
	height: 100%;
	box-sizing: border-box;
	padding: 0.5em;
}

#search-status.error {
	/* background-image: linear-gradient(to right, transparent 0, #ff919188 60%); */
	color: #aa0000;
}

#content {
	flex: 1;
	/* scroll puts the scrollbar there at all times */
	/* overflow-y: scroll; */
	/* so don't do that */
	overflow-x: hidden;
	padding: 0.5em;
}

#top-bar {
	display: flex;
	flex-direction: row;
	/*flex-wrap: wrap;*/
	justify-content: space-between;
}

h1#parsed-query-pretty {
	font-weight: normal;
	font-size: 1.5em;
	margin-top: 0;
	margin-bottom: 0.5em;
}

#unit-selector {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	height: 100%;
}

#unit-selector input {
	display: none;
}

#unit-selector input + label {
	padding: 0.35em;
	user-select: none;
	font-size: 0.9em;
}

#overview-container {
	display: flex;
	flex-direction: column;
}

li.day-overview {
	flex: 1;
	display: block;
	/* border: 0.5px dashed black; */
}

li.day-overview > label.day-overview {
	/* padding: 0.5em 0.25em; */
	padding: 0.5em 0;
	cursor: pointer;
}

label.day-overview, li.period-breakdown {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}

#overview-container > li.day-overview input[type="checkbox"]:not(:checked) + label + ul.day-breakdown {
	height: 0;
	display: none;
}

span.weather-data {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	flex: 1;
	justify-content: left;
}

li.period-breakdown {
	padding: 0.25em 0;
	margin-left: 3.25rem;
	font-size: 0.95em;
	border-left: 0.5px dotted grey;
}

label.day-overview > span.relative-day, li.period-breakdown > span.time {
	display: inline-block;
	width: 6rem;
	padding-right: 0.5rem;
	text-align: right;
}
label.day-overview > span.relative-day::after {
	content: ':';
}

span.condition, span.temp, span.wind {
	display: inline-block;
	flex: 1;
	padding: 0 0 0 0.55rem;
	position: relative;
	min-width: fit-content;
}

span.time {
	max-width: 2.75rem;
}

span.condition {
	flex-basis: 100%;
}

span.temp {
	flex: 0.6;
}

span.wind {
	flex: 1.4;
}

span.condition > span.condition-caption {
	margin-left: 1.2rem;
}


/* Mobile, but wide enough to display data on one line */
@media all and (min-width: 25em) {
	span.condition {
		flex-basis: inherit;
	}
}

span.temp-wind-container {
	padding-left: 0.15rem;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 9rem;
}

span.temp, span.wind {
	flex-grow: 0;
}

span.condition {
	text-align: left;
	min-width: 10rem;
	max-width: 10rem;
}

span.temp {
	flex: 0.3;
	max-width: 3rem;
	text-align: right;
}

span.wind {
	flex: 0.6;
	text-align: left;
}
